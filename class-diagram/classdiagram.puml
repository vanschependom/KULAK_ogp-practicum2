@startuml

package filesystem {

abstract Item {
    - String name
    - Date creationTime
    - Date modificationTime
__
    + Item(String naam)
..
    + boolean canHaveAsName()
    + void changeName()
    + boolean isDeleteable()
    + void delete() (destructor)
    + boolean hasOverlappingUsagePeriod(Item other)
    + void move()
    + Directory getRoot()
    + boolean isDirectorOrIndirectChildOf(Directory dir)
    + int getTotalDiskUsage()
    + String getAbsolutePath()
    + deleteRecursive()
..Getters & setters..
    + Date getCreationTime()
    + Date getModificationTime()
    - void setModificationTime(Date modificationTime)
}

class File {
    - int size
    - {static} int MAX_SIZE
    - boolean writeable
    - final Filetype type
__
    + File(Directory dir, String name, float size, boolean writeable, Filetype type)
    + File(Directory dir, String name, Filetype type)
..
    + boolean isWriteable()
    + boolean canHaveAsSize(int size)
    + void enlarge(int amountOfBits)
    + void shorten(int amountOfBits)
..Getters & setters..
    + float getSize()
    + void setSize(int size)
    + Sting getName()
    - void setName(String name)
    + void setWriteable(boolean writeable)
..Overrides..
    + boolean isDeleteable()
    + void delete() (destructor)
    + int getTotalDiskUsage()
}

enum Filetype {
    TEXT("txt"),
    PDF("pdf"),
    JAVA("java")
}

class Directory {
    - boolean writeable
    - ArrayList<Item> items
__
    + Directory(Directory dir, String name, boolean writeable)
    + Directory(Directory dir, String name)
    + Directory(String name, boolean writable)
    + Directory(String name)
__
    + void addItem(Item item)
    + int getNbItems()
    + Item getItemAt(int index)
    + Item getItem(String name)
    + boolean containsDiskItemWithName(String name)
    + int getIndexOf(Item item)
    + boolean hasAsItem(Item item)
    + void makeRoot()
.. Overrides ..
    + boolean canHaveAsName()
    + boolean isDeleteable()
    + void delete() (destructor)
    + int getTotalDiskUsage()
}

class Link {
    - Item linkedItem (not another link)
__
    + Link(Directory dir, String name, Filetype type)
..
    + void changeLinkTo(Link link)
    + void unlink()
..Overrides..
    + boolean isDeleteable()
    + void delete() (destructor)
    + int getTotalDiskUsage()
}

Item <|-- Link: inherits from
Item <|-- File: inherits from
Item <|-- Directory: inherits from

File .. Filetype: uses

Link --> File: references
Link --> Directory: references

}

@enduml
